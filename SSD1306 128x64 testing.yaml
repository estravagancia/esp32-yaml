esphome:
  name: esp-one
  friendly_name: esp-one

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: VERBOSE
  baud_rate: 115200
  deassert_rts_dtr: true

# Enable Home Assistant API
api:
  encryption:
    key: "s6dwdqx6fpiGNJa/IFBUYepPJ7K/YHhmUX/SixPtTPI="

ota:
  - platform: esphome
    password: "ed8591bc22bb5ee5a519da8e38e1dfbf"

switch:
  - platform: gpio
    pin:
      number: 2
      mode: output
    id: internalLED

time:
  - platform: homeassistant
    id: homeassistant_time

# Example configuration entry
font:
  - file: 'fonts/slkscr.ttf'
    id: font1
    size: 8

  - file: 'fonts/BebasNeue-Regular.ttf'
    id: font2
    size: 48

  - file: 'fonts/arial.ttf'
    id: font3
    size: 14

wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
    - ssid: !secret wifi_ssid_EXT
      password: !secret wifi_password_EXT

# Optional manual IP
  manual_ip:
    static_ip: 192.168.0.28
    gateway: 192.168.0.1
    subnet: 255.255.254.0

  on_connect:
    - switch.toggle: internalLED
    - delay: 5s  # Gives time for improv results to be transmitted
    - lambda: |-
        id(pantalla).printf(0, 0, id(font2), "Connected to Wifi :)");
    - logger.log: "Connected!"
    - delay: 5s  # Gives time for improv results to be transmitted
    - switch.turn_off: internalLED
    - homeassistant.action:
        action: notify.persistent_notification
        data:
          message: Connected to Wifi ðŸ˜Š
    - pantalla.template.publish:
      lambda: |-
        id(pantalla).printf(0, 0, id(font2), "Connected to Wifi :)");
  on_disconnect:
    - switch.turn_off: internalLED
    - logger.log: "Not connected"
    - homeassistant.action:
        action: notify.persistent_notification
        data:
          message: Not connected to Wifi ðŸ˜£
  

  # # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp-One Fallback Hotspot"
    password: !secret wifi_password

captive_portal:

switch:
  - platform: homeassistant
    id: nevera
    entity_id: switch.nevera_enchufe_1
    internal: true
    state_class: "switch"
    on_turn_on:
      - homeassistant.action:
          action: notify.persistent_notification
          data:
            message: Nevera encendida
    on_turn_off:
      - homeassistant.action:
          action: notify.persistent_notification
          data:
            message: Nevera apagada
            
sensor:
  - platform: homeassistant
    id: humedad
    entity_id: sensor.sensor_humedad
    unit_of_measurement: "%"
    device_class: "humidity"
    state_class: "measurement"
    internal: true
    on_value_range:
      - above: 60.0
        then:
          - switch.turn_on: internalLED
          - homeassistant.action: 
              action: notify.persistent_notification
              data_template:
                message: >
                  {{ states('sensor.sensor_humedad', with_unit=True) }}
          - lambda: |-
              id(pantalla).printf(0, 0, id(font2), "%.1f%%", id(humedad).state);
          # - homeassistant.action:
          #     action: notify.html5
          #     data:
          #       title: New Humidity
          #     data_template:
          #       message: The humidity is {{ my_variable }}%.
          #     variables:
          #       my_variable: |-
          #         return id(humedad).state;
      - below: 59.9
        then: 
          - switch.turn_off: internalLED
          - homeassistant.action: 
              action: notify.persistent_notification
              data:
                message: Humedad por debajo del 50%
          - lambda: |-
              id(pantalla).printf(0, 0, id(font2), "%.1f%%", id(humedad).state);
    filters:
      - heartbeat: 30s

  - platform: homeassistant
    id: temperatura
    entity_id: sensor.sensor_temperatura
    unit_of_measurement: "ÂºC"
    device_class: "temperature"
    state_class: "measurement"
    internal: true
    filters:
      - heartbeat: 30s

i2c:
  sda: GPIO21
  scl: GPIO22

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3C
    id: pantalla
    lambda: |-
      it.printf(64, 0, id(font1), TextAlign::TOP_CENTER, "casa");
      it.strftime(0, 60, id(font2), TextAlign::BASELINE_LEFT, "%H:%M", id(homeassistant_time).now());
      if (id(temperatura).has_state()) {
        it.printf(127, 23, id(font3), TextAlign::TOP_RIGHT , "%.1fÂ°", id(temperatura).state);
      }
      if (id(humedad).has_state()) {
        it.printf(127, 60, id(font3), TextAlign::BASELINE_RIGHT , "%.1f%%", id(humedad).state);
      }
    update_interval: 30s